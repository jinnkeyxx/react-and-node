{"ast":null,"code":"var _jsxFileName = \"D:\\\\l\\u1EADp tr\\xECnh\\\\nodejs\\\\react-and-node\\\\client\\\\src\\\\appchat@\\\\SubComponents\\\\Form.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport Alert from './Alert';\nimport * as api from '../Service/apiHelper';\nimport * as helper from '../Helper/Common';\nimport Loading from './Loading';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nconst Form = props => {\n  const [showAlert, setShowAlert] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [userValue, setUserValue] = useState('');\n  const [passValue, setPassValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [statusForm, setStatusForm] = useState(\"\");\n  const [error, setErrorForm] = useState(\"\");\n  const [success, setSuccesForm] = useState(\"\");\n\n  const ConfirmAlert = () => {\n    setShowAlert(false);\n\n    if (statusForm === 'success') {\n      window.location.reload();\n    }\n  };\n\n  const changeInput = event => {\n    const nameInput = event.target.name;\n    const value = event.target.value;\n    if (nameInput === \"username\") return setUserValue(value);\n    if (nameInput === \"password\") return setPassValue(value);\n    if (nameInput === \"email\") return setEmailValue(value);\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n    await setLoading(true);\n    const data = await api.sendPostData(props.route, {\n      username: userValue,\n      password: passValue,\n      email: emailValue\n    });\n\n    if (!helper.isEmptyObj(data)) {\n      if (data.status === true) {\n        setLoading(false);\n        setStatusForm(\"success\");\n        setErrorForm(data.message);\n        setShowAlert(true);\n        api.saveToken(data.token);\n      } else {\n        setStatusForm(\"error\");\n        setShowAlert(true);\n        setLoading(false);\n        setErrorForm(data.message);\n      }\n\n      console.log(data);\n    } else {\n      await setLoading(false);\n      await setErrorForm(data.message);\n    }\n  };\n\n  useEffect(() => {\n    AOS.init({\n      duration: 2000\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"container pt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, error !== \"\" && /*#__PURE__*/React.createElement(Alert, {\n    show: showAlert,\n    text: error,\n    type: statusForm,\n    Confirm: ConfirmAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"row pt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    sm: 10,\n    className: \" mr-auto ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    \"data-aos\": \"fade-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"card-title text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, props.form), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }), props.stateForm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \" Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: changeInput,\n    className: \"form-control\",\n    name: \"email\",\n    value: emailValue,\n    placeholder: \"Nh\\u1EADp t\\xE0i kho\\u1EA3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Username or Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: changeInput,\n    className: \"form-control\",\n    name: \"username\",\n    value: userValue,\n    placeholder: \"Nh\\u1EADp t\\xE0i kho\\u1EA3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: changeInput,\n    className: \"form-control\",\n    name: \"password\",\n    value: passValue,\n    placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: submitForm,\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"))), isLoading && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 32\n    }\n  })))));\n};\n\nexport default React.memo(Form);","map":{"version":3,"sources":["D:/lập trình/nodejs/react-and-node/client/src/appchat@/SubComponents/Form.jsx"],"names":["React","useState","useEffect","Container","Row","Col","Card","Alert","api","helper","Loading","AOS","Form","props","showAlert","setShowAlert","isLoading","setLoading","userValue","setUserValue","passValue","setPassValue","emailValue","setEmailValue","statusForm","setStatusForm","error","setErrorForm","success","setSuccesForm","ConfirmAlert","window","location","reload","changeInput","event","nameInput","target","name","value","submitForm","preventDefault","data","sendPostData","route","username","password","email","isEmptyObj","status","message","saveToken","token","console","log","init","duration","form","stateForm","memo"],"mappings":"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","sourcesContent":["import React , {useState , useEffect} from 'react'\r\nimport {Container , Row , Col , Card} from 'react-bootstrap'\r\nimport Alert from './Alert'\r\nimport * as api from '../Service/apiHelper'\r\nimport * as helper from '../Helper/Common'\r\nimport Loading from './Loading'\r\nimport AOS from 'aos'\r\nimport 'aos/dist/aos.css'\r\nconst Form = (props) => {\r\n    const [showAlert , setShowAlert] = useState(false)\r\n    const [isLoading , setLoading] = useState(false)\r\n    const [userValue , setUserValue] = useState('')\r\n    const [passValue , setPassValue ] = useState('')\r\n    const [emailValue , setEmailValue ] = useState('')\r\n    const [statusForm , setStatusForm] = useState(\"\")\r\n    const [error , setErrorForm] = useState(\"\")\r\n    const [success , setSuccesForm] = useState(\"\")\r\n    \r\n    const ConfirmAlert = () => {\r\n        setShowAlert(false)\r\n        if(statusForm === 'success'){\r\n            window.location.reload()\r\n        }\r\n    }\r\n      const changeInput = (event) => {\r\n        const nameInput = event.target.name\r\n        const value = event.target.value\r\n        if(nameInput === \"username\") return setUserValue(value)\r\n        if(nameInput === \"password\") return setPassValue(value)\r\n        if(nameInput === \"email\") return setEmailValue(value)\r\n    }\r\n    const submitForm = async (event) => {\r\n        event.preventDefault()\r\n        await setLoading(true)\r\n        const data = await api.sendPostData(props.route ,{username : userValue , password: passValue , email : emailValue})\r\n        if(!helper.isEmptyObj(data)){\r\n            if(data.status === true){\r\n                setLoading(false)\r\n                setStatusForm(\"success\")\r\n                setErrorForm(data.message)\r\n                setShowAlert(true)\r\n                api.saveToken(data.token)\r\n            }\r\n            else {\r\n                setStatusForm(\"error\")\r\n                setShowAlert(true)\r\n                setLoading(false)\r\n                setErrorForm(data.message)\r\n            }\r\n            console.log(data);\r\n        }\r\n        else {\r\n            await setLoading(false)\r\n            await setErrorForm(data.message)\r\n        }\r\n    }\r\n \r\n    useEffect(() => {\r\n        AOS.init({duration : 2000});\r\n    }, [])\r\n    return(\r\n    <Container className=\"container pt-5\">\r\n        \r\n        {error !== \"\" && (<Alert show={showAlert} text={error} type={statusForm} Confirm={ConfirmAlert}/>)}\r\n        \r\n          <Row className=\"row pt-5\">\r\n            <Col md={8} sm={10}  className=\" mr-auto ml-auto\">\r\n              <Card data-aos=\"fade-right\">\r\n                <Card.Body className=\"card-body\">\r\n                  <Card.Text className=\"card-title text-center\">{props.form}</Card.Text>\r\n                  <hr />\r\n                  {props.stateForm && (<div className=\"form-group\">\r\n                    <label > Email:</label>\r\n                    <input type=\"text\" onChange={changeInput} className=\"form-control\" name=\"email\" value={emailValue} placeholder=\"Nhập tài khoản\" />\r\n                  </div>)}\r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label >Username or Email:</label>\r\n                    <input type=\"text\"  onChange={changeInput}   className=\"form-control\" name=\"username\" value={userValue} placeholder=\"Nhập tài khoản\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label >Password:</label>\r\n                    <input type=\"password\"  onChange={changeInput}   className=\"form-control\" name=\"password\" value={passValue} placeholder=\"Nhập mật khẩu\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button type=\"button\" onClick={submitForm} className=\"btn btn-primary btn-block\" >\r\n                      Đăng nhập\r\n                    </button>\r\n                  </div>\r\n                </Card.Body>\r\n                {isLoading && (<Loading/>)}\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n    </Container>\r\n    )\r\n    \r\n}\r\nexport default React.memo(Form)"]},"metadata":{},"sourceType":"module"}